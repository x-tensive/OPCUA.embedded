name: build windows servers

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: checkout local
      uses: actions/checkout@v3
      with:
        path: "./.localrepo"
    - name: checkout
      uses: actions/checkout@v3
      with:
        repository: "x-tensive/open62541-servers"
        ref: "master"
        submodules: recursive
        token: ${{ secrets.BUILDER_TOKEN }}
        path: "./.mainrepo"
        
    - name: update version
      shell: pwsh
      working-directory: "./.mainrepo"
      run: ./.buildtools/github/updateVersion.ps1 "${{ github.event.release.tag_name }}"
        
    - name: add msbuild
      uses: microsoft/setup-msbuild@v1.1
    
    - name: build SINUMERIK S7 ONLINX XPSP3
      uses: ./.localrepo/.github/actions/build-single-windows-server
      with:
        installer: s7onlinx.xpsp3.msbuild
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./.out/installer/s7onck.Win32.xpsp3/dpa.ua.s7onck.install32.exe
        asset_name: dpa.ua.s7onck.install32.xpsp3_${{ github.event.release.tag_name }}.exe
        token: ${{ secrets.GITHUB_TOKEN }}
        pfx: ${{ secrets.CODESIGN_CERT_BASE64 }}
        password: ${{ secrets.CODESIGN_CERT_PWD }}

    # - name: build SINUMERIK S7 ONLINX W2K
    #   uses: ./.localrepo/.github/actions/build-single-windows-server
    #   with:
    #     solution: ua_sinumerikServer/ua_sinumerikServer_onlinx.sln
    #     configuration: Release W2K
    #     platform: x86
    #     out: SINUMERIK.S7ONLINX/Release.Win32.w2k
    #     installer: installer/engine.all/s7onlinx.w2k.msbuild
    #     upload_url: ${{ github.event.release.upload_url }}
    #     asset_path: ./.out/installer/s7onck.Win32.w2k/dpa.ua.s7onck.install32.exe
    #     asset_name: dpa.ua.s7onck.install32.w2k_${{ github.event.release.tag_name }}.exe
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     pfx: ${{ secrets.CODESIGN_CERT_BASE64 }}
    #     password: ${{ secrets.CODESIGN_CERT_PWD }}

    # - name: build SINUMERIK S7 TCP XPSP3
    #   uses: ./.localrepo/.github/actions/build-single-windows-server
    #   with:
    #     solution: ua_sinumerikServer/ua_sinumerikServer.sln
    #     configuration: Release XPSP3
    #     platform: x86
    #     out: SINUMERIK.S7TCP/Release.Win32.xpsp3
    #     installer: installer/engine.all/s7tcp.x86.xpsp3.msbuild
    #     upload_url: ${{ github.event.release.upload_url }}
    #     asset_path: ./.out/installer/s7nck.Win32.xpsp3/dpa.ua.s7nck.install32.exe
    #     asset_name: dpa.ua.s7nck.install32.xpsp3_${{ github.event.release.tag_name }}.exe
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     pfx: ${{ secrets.CODESIGN_CERT_BASE64 }}
    #     password: ${{ secrets.CODESIGN_CERT_PWD }}
    
    # - name: build SINUMERIK S7 TCP - x86
    #   uses: ./.localrepo/.github/actions/build-single-windows-server
    #   with:
    #     solution: ua_sinumerikServer/ua_sinumerikServer.sln
    #     configuration: Release
    #     platform: x86
    #     out: SINUMERIK.S7TCP/Release.Win32
    #     installer: installer/engine.all/s7tcp.x86.msbuild
    #     upload_url: ${{ github.event.release.upload_url }}
    #     asset_path: ./.out/installer/s7nck.Win32/dpa.ua.s7nck.install32.exe
    #     asset_name: dpa.ua.s7nck.install32_${{ github.event.release.tag_name }}.exe
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     pfx: ${{ secrets.CODESIGN_CERT_BASE64 }}
    #     password: ${{ secrets.CODESIGN_CERT_PWD }}

    # - name: build SINUMERIK S7 TCP - x64
    #   uses: ./.localrepo/.github/actions/build-single-windows-server
    #   with:
    #     solution: ua_sinumerikServer/ua_sinumerikServer.sln
    #     configuration: Release
    #     platform: x64
    #     out: SINUMERIK.S7TCP/Release.x64
    #     installer: installer/engine.all/s7tcp.x64.msbuild
    #     upload_url: ${{ github.event.release.upload_url }}
    #     asset_path: ./.out/installer/s7nck.x64/dpa.ua.s7nck.install64.exe
    #     asset_name: dpa.ua.s7nck.install64_${{ github.event.release.tag_name }}.exe
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     pfx: ${{ secrets.CODESIGN_CERT_BASE64 }}
    #     password: ${{ secrets.CODESIGN_CERT_PWD }}
    
    # - name: build PRIMA POWER CNDEX
    #   uses: ./.localrepo/.github/actions/build-single-windows-server
    #   with:
    #     solution: ua_cndexServer/ua_cndexServer.sln
    #     configuration: Release
    #     platform: x86
    #     out: CNDEX/Release.Win32
    #     installer: installer/engine.all/cndex.msbuild
    #     upload_url: ${{ github.event.release.upload_url }}
    #     asset_path: ./.out/installer/cndex.Win32/dpa.ua.cndex.install32.exe
    #     asset_name: dpa.ua.cndex.install32_${{ github.event.release.tag_name }}.exe
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     pfx: ${{ secrets.CODESIGN_CERT_BASE64 }}
    #     password: ${{ secrets.CODESIGN_CERT_PWD }}

    # - name: build FANUC FOCAS - x86
    #   uses: ./.localrepo/.github/actions/build-single-windows-server
    #   with:
    #     solution: ua_focasServer/ua_focasServer.sln
    #     configuration: Release
    #     platform: x86
    #     out: FOCAS/Release.Win32
    #     installer: installer/engine.all/focas.x86.msbuild
    #     upload_url: ${{ github.event.release.upload_url }}
    #     asset_path: ./.out/installer/focas.Win32/dpa.ua.focas.install32.exe
    #     asset_name: dpa.ua.focas.install32_${{ github.event.release.tag_name }}.exe
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     pfx: ${{ secrets.CODESIGN_CERT_BASE64 }}
    #     password: ${{ secrets.CODESIGN_CERT_PWD }}

    # - name: build FANUC FOCAS - x64
    #   uses: ./.localrepo/.github/actions/build-single-windows-server
    #   with:
    #     solution: ua_focasServer/ua_focasServer.sln
    #     configuration: Release
    #     platform: x64
    #     out: FOCAS/Release.x64
    #     installer: installer/engine.all/focas.x64.msbuild
    #     upload_url: ${{ github.event.release.upload_url }}
    #     asset_path: ./.out/installer/focas.x64/dpa.ua.focas.install64.exe
    #     asset_name: dpa.ua.focas.install64_${{ github.event.release.tag_name }}.exe
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     pfx: ${{ secrets.CODESIGN_CERT_BASE64 }}
    #     password: ${{ secrets.CODESIGN_CERT_PWD }}

